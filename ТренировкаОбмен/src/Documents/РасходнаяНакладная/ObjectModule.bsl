
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//1.Установка маркера Записи у регистра
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	
	//2.Инициализация менеджера временных таблиц
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	//3.Запрос, в котором группируются данные табличной части и подготавливается таблица
    //значений для загрузки в коллекцию движений по регистру 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
	               |	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
	               |	&Период КАК Период,
	               |	&ВидДвижения КАК ВидДвижения
	               |ПОМЕСТИТЬ ТЧСписокНоменклатуры
	               |ИЗ
	               |	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
	               |ГДЕ
	               |	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЧСписокНоменклатуры.Номенклатура КАК Номенклатура,
	               |	ТЧСписокНоменклатуры.Количество КАК Количество,
	               |	ТЧСписокНоменклатуры.Период КАК Период,
	               |	ТЧСписокНоменклатуры.ВидДвижения КАК ВидДвижения
	               |ИЗ
	               |	ТЧСписокНоменклатуры КАК ТЧСписокНоменклатуры";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Период",Дата);
	Запрос.УстановитьПараметр("ВидДвижения",ВидДвиженияНакопления.Расход);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// 4. Загрузка таблицы значений в коллекцию движений
	Движения.ОстаткиНоменклатуры.Загрузить(РезультатЗапроса.Выгрузить());
	
	// 5. Управляемая блокировка данных регистра
	Движения.ОстаткиНоменклатуры.БлокироватьДляИзменения = Истина;
	
	// 6. Запись коллекции движений
	Движения.Записать(); 
	
	// 7. Запрос на получение отрицательных остатков
	Запрос.Текст = "ВЫБРАТЬ
	                |	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	                |	ОстаткиНоменклатурыОстатки.Номенклатура.Представление КАК НоменклатураПредставление,
	                |	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток
	                |ИЗ
	                |	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	                |			&ДатаОстатков,
	                |			Номенклатура В
	                |				(ВЫБРАТЬ
	                |					ТЧСписокНоменклатуры.Номенклатура КАК Номенклатура
	                |				ИЗ
	                |					ТЧСписокНоменклатуры КАК ТЧСписокНоменклатуры)) КАК ОстаткиНоменклатурыОстатки
	                |ГДЕ
	                |	ОстаткиНоменклатурыОстатки.КоличествоОстаток < 0";
	
	// 8. Определение момента времени для получения остатков
	Запрос.УстановитьПараметр("ДатаОстатков",Новый Граница(МоментВремени(),ВидГраницы.Включая));
	
	Результат = Запрос.Выполнить();
	
	// 9. Если запрос не пустой, появились отрицательные остатки
	Если НЕ Результат.Пустой() тогда
		Отказ = Истина;
		
		// 10. Выдача сообщений пользователю о наличии отрицательных остатков
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() цикл
			
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не хватает товара " + Выборка.НоменклатураПредставление + " в количестве " + (-Выборка.КоличествоОстаток)+ "шт.";
				Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	// 11. Есть ошибки, выходим из процедуры
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	
	
КонецПроцедуры
